<project name="lediir" default="xar">
    <xmlproperty file="expath-pkg.xml" /> <!-- Adjust path below to match location of your npm binary -->
    <property name="npm" value="npm.cmd" />
    <property name="project.version" value="${package(version)}" />
    <property name="project.app" value="${package(abbrev)}" />
    <property name="build.dir" value="build" />
    <property name="scripts.dir" value="../../tei-publisher-components/dist" />
    <target name="clean">
        <echo message="Deleting 'resources/scripts' subdirectory" />
        <delete dir="resources/scripts" includes="*.js *.map" />
        <echo message="Deleting 'images/leaflet' subdirectory" />
        <delete dir="resources/images/leaflet" />
        <delete dir="resources/images/openseadragon" />
        <delete dir="resources/i18n/common" />
        <delete dir="resources/css" includes="leaflet/** prismjs/**" />
        <delete dir="resources/lib" />
    </target>
    <target name="prepare">
        <echo message="Preparing 'resources/scripts' directory; copying from ${scripts.dir}" />
        <copy todir="resources/scripts">
            <fileset dir="${scripts.dir}">
                <include name="*.js" />
                <include name="*.map" />
            </fileset>
        </copy>
        <copy file="node_modules/leaflet/dist/leaflet.css" todir="resources/css/leaflet" />
        <copy todir="resources/images/leaflet">
            <fileset dir="node_modules/leaflet/dist/images" />
        </copy>
        <copy todir="resources/images/openseadragon">
            <fileset dir="node_modules/openseadragon/build/openseadragon/images" />
        </copy>
        <copy file="node_modules/openseadragon/build/openseadragon/openseadragon.min.js" todir="resources/lib" />
        <copy todir="resources/css/prismjs">
            <fileset dir="node_modules/prismjs/themes" />
        </copy>
        <copy todir="resources/i18n/common">
            <fileset dir="node_modules/@daliboris/pb-components/i18n/common" />
            <!-- <fileset dir="node_modules/@teipublisher/pb-components/i18n/common" /> -->
        </copy>
    </target>
    <target name="xar-local" depends="npm.install,prepare,xar" />
    <target name="xar">
        <mkdir dir="${build.dir}" />
        <zip basedir="." destfile="${build.dir}/${project.app}-${project.version}.xar" excludes="${build.dir} ${build.dir}/* node_modules/** *.code-workspace .existdb.json *build.properties" />
        <copy file="${build.dir}/${project.app}-${project.version}.xar" overwrite="true" tofile="${build.dir}/${project.app}.xar"/>
    </target>
    <target name="xar-complete" depends="clean,npm.install,xar" />
    <target name="xar-dev" depends="xar">
           <copy file="${build.dir}/${project.app}-${project.version}.xar" overwrite="true" tofile="${build.dir}/${project.app}-${project.version}-dev.xar"/>
           <delete dir="${build.dir}" includes="${project.app}-${project.version}.xar" />
           <delete dir="${build.dir}" includes="${project.app}.xar" />
    </target>
    <target name="npm.install">
        <exec executable="${npm}" outputproperty="npm.output">
            <arg line="install" />
        </exec>
        <echo message="${npm.output}" />
    </target>
</project>