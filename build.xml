<project name="lediir" default="xar">
    <xmlproperty file="${basedir}/expath-pkg.xml" />
    <property file="${basedir}/local.build.properties" />
    <property file="${basedir}/build.properties" />
    <property name="project.version" value="${package(version)}" />
    <property name="project.app" value="${package(abbrev)}" />
    <property name="build.dir" value="build" />
    <property name="scripts.dir" value="${basedir}/node_modules/@daliboris/pb-components/dist" />
    <target name="clean">
        <echo message="Deleting 'resources/scripts' subdirectory (excluding browse.js, facets.js)" />
        <delete dir="resources/scripts" includes="*.js *.map" excludes="browse.js facets.js" />
        <echo message="Deleting 'images/leaflet' subdirectory" />
        <delete dir="resources/images/leaflet" />
        <delete dir="resources/images/openseadragon" />
        <delete dir="resources/i18n/common" />
        <delete dir="resources/css" includes="leaflet/** prismjs/**" />
        <delete dir="resources/lib" />
    </target>
    <target name="prepare">
        <echo message="Preparing 'resources/scripts' directory; copying from ${scripts.dir}" />
        <copy todir="resources/scripts">
            <fileset dir="${scripts.dir}">
                <include name="*.js" />
                <include name="*.map" />
            </fileset>
        </copy>
        <copy file="node_modules/leaflet/dist/leaflet.css" todir="resources/css/leaflet" />
        <copy todir="resources/images/leaflet">
            <fileset dir="node_modules/leaflet/dist/images" />
        </copy>
        <copy todir="resources/images/openseadragon">
            <fileset dir="node_modules/openseadragon/build/openseadragon/images" />
        </copy>
        <copy file="node_modules/openseadragon/build/openseadragon/openseadragon.min.js" todir="resources/lib" />
        <copy todir="resources/css/prismjs">
            <fileset dir="node_modules/prismjs/themes" />
        </copy>
        <copy todir="resources/i18n/common">
            <fileset dir="node_modules/@daliboris/pb-components/i18n/common" />
            <!-- <fileset dir="node_modules/@teipublisher/pb-components/i18n/common" /> -->
        </copy>
    </target>
    <target name="prepare-config">
        <replaceregexp file="modules/config.xqm" 
        match="^(\s)*declare.*\$config:webcomponents :=.*;(\s)*$"
        replace="(: \0 :)"
        byline="true" />
        <replaceregexp file="modules/config.xqm" 
            match="^(\s)*declare.*\$config:webcomponents-cdn :=.*;(\s)*$"
            replace="(: \0 :)"
            byline="true" />
    </target>
    <target name="prepare-local" depends="prepare-config">
        <echo message="Changing 'modules/config.xqm' file: using 'local' for $config:webcomponents" />
        
        <replaceregexp file="modules/config.xqm" 
            match='^(\s*)\(:\s*(declare.*\$config:webcomponents\s*:=\s*"local"\s*;)\s+:\)$'
            replace='declare variable $config:webcomponents := "local";'
            byline="true" />
        <echo message="Changing 'modules/config.xqm' file: using 'cdn' for $config:webcomponents-cdn" />
        
        <replaceregexp file="modules/config.xqm" 
            match='^(\s*)\(:\s*(declare.*\$config:webcomponents-cdn\s*:=\s*"https://cdn.jsdelivr.net/npm/@teipublisher/pb-components"\s*;)\s+:\)$'
            replace='declare variable $config:webcomponents-cdn := "https://cdn.jsdelivr.net/npm/@teipublisher/pb-components";'
            byline="true" />
    </target>
    <target name="prepare-dev" depends="prepare-config">
        <echo message="Changing 'modules/config.xqm' file: using 'dev' for $config:webcomponents" />
        
        <replaceregexp file="modules/config.xqm" 
            match='^(\s*)\(:\s*(declare.*\$config:webcomponents\s*:=\s*"dev"\s*;)\s+:\)$'
            replace='declare variable $config:webcomponents := "dev";'
            byline="true" />
        <echo message="Changing 'modules/config.xqm' file: using 'cdn' for $config:webcomponents-cdn" />
        
        <replaceregexp file="modules/config.xqm" 
            match='^(\s*)\(:\s*(declare.*\$config:webcomponents-cdn\s*:=\s*"http://localhost:8000"\s*;)\s+:\)$'
            replace='declare variable $config:webcomponents-cdn := "http://localhost:8000";'
            byline="true" />
    </target>
    <target name="xar-local" depends="npm.install,prepare,prepare-local,xar" />
    <target name="xar">
        <mkdir dir="${build.dir}" />
        <zip basedir="." destfile="${build.dir}/${project.app}-${project.version}.xar" 
            excludes="${build.dir} ${build.dir}/** node_modules/** *.code-workspace .existdb.json *build.properties *.xstrc *local*" />
        <copy file="${build.dir}/${project.app}-${project.version}.xar" overwrite="true" tofile="${build.dir}/${project.app}.xar"/>
    </target>
    <target name="xar-complete" depends="clean,npm.install,xar" />
    <target name="xar-dev" depends="prepare,prepare-dev,xar">
           <copy file="${build.dir}/${project.app}-${project.version}.xar" overwrite="true" tofile="${build.dir}/${project.app}-${project.version}-dev.xar"/>
           <delete dir="${build.dir}" includes="${project.app}-${project.version}.xar" />
           <delete dir="${build.dir}" includes="${project.app}.xar" />
    </target>
    <target name="npm.install">
        <echo message="npm: ${npm}; basedir: ${basedir}; scripts.dir: ${scripts.dir}" />
        <exec executable="${npm}" outputproperty="npm.output">
            <arg line="install" />
        </exec>
        <echo message="${npm.output}" />
    </target>
</project>